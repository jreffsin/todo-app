/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main.css":
/*!**********************!*\
  !*** ./src/main.css ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://todo-app/./src/main.css?");

/***/ }),

/***/ "./src/domManipulations.js":
/*!*********************************!*\
  !*** ./src/domManipulations.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addActiveProjectElementToggle\": () => (/* binding */ addActiveProjectElementToggle),\n/* harmony export */   \"addPriorityButtonsEventListeners\": () => (/* binding */ addPriorityButtonsEventListeners),\n/* harmony export */   \"addProjectFormListener\": () => (/* binding */ addProjectFormListener),\n/* harmony export */   \"addTodoAdderListener\": () => (/* binding */ addTodoAdderListener),\n/* harmony export */   \"addTodoSubmitListener\": () => (/* binding */ addTodoSubmitListener),\n/* harmony export */   \"clearTodoInputFields\": () => (/* binding */ clearTodoInputFields),\n/* harmony export */   \"closeEditTodoModal\": () => (/* binding */ closeEditTodoModal),\n/* harmony export */   \"closeModal\": () => (/* binding */ closeModal),\n/* harmony export */   \"createProjectElement\": () => (/* binding */ createProjectElement),\n/* harmony export */   \"createProjectForm\": () => (/* binding */ createProjectForm),\n/* harmony export */   \"createTodoElement\": () => (/* binding */ createTodoElement),\n/* harmony export */   \"editProjectElem\": () => (/* binding */ editProjectElem),\n/* harmony export */   \"getTodoValues\": () => (/* binding */ getTodoValues),\n/* harmony export */   \"initModals\": () => (/* binding */ initModals),\n/* harmony export */   \"markTodoElementComplete\": () => (/* binding */ markTodoElementComplete),\n/* harmony export */   \"openAddTodoModal\": () => (/* binding */ openAddTodoModal),\n/* harmony export */   \"removeActiveProjectElementToggle\": () => (/* binding */ removeActiveProjectElementToggle),\n/* harmony export */   \"removeProjectElem\": () => (/* binding */ removeProjectElem),\n/* harmony export */   \"removeTodoElement\": () => (/* binding */ removeTodoElement),\n/* harmony export */   \"removeTodoElements\": () => (/* binding */ removeTodoElements),\n/* harmony export */   \"setPriorityButton\": () => (/* binding */ setPriorityButton),\n/* harmony export */   \"toggleTodoPanelElementsVis\": () => (/* binding */ toggleTodoPanelElementsVis),\n/* harmony export */   \"updateItemsTitle\": () => (/* binding */ updateItemsTitle),\n/* harmony export */   \"updateTodoElement\": () => (/* binding */ updateTodoElement)\n/* harmony export */ });\n/* harmony import */ var _assets_projectLogo_png__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assets/projectLogo.png */ \"./src/assets/projectLogo.png\");\n/* harmony import */ var _assets_trash_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assets/trash.png */ \"./src/assets/trash.png\");\n/* harmony import */ var _assets_edit_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./assets/edit.png */ \"./src/assets/edit.png\");\n/* harmony import */ var _assets_check_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./assets/check.png */ \"./src/assets/check.png\");\n/* harmony import */ var _assets_cancel_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./assets/cancel.png */ \"./src/assets/cancel.png\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./objects */ \"./src/objects.js\");\n\n\n\n\n\n\n\n\nconst createProjectElement = function (name, id) {\n\n    //create div for project DOM element\n    let newProject = document.createElement('div');\n    newProject.dataset.projectId = id;\n    newProject.setAttribute('class', 'project');\n\n    //create wrapper for project name and icon\n    let projectNameWrapper = document.createElement('div');\n    projectNameWrapper.setAttribute('class', 'nameWrapper');\n\n    //add project logo to project name and icon wrapper div\n    let projectIcon = document.createElement('img');\n    projectIcon.src = _assets_projectLogo_png__WEBPACK_IMPORTED_MODULE_0__;\n    projectNameWrapper.appendChild(projectIcon);\n\n    //add project name to project name and icon wrapper div\n    let projectName = document.createElement('p');\n    projectName.innerHTML = `${name}`;\n    projectNameWrapper.appendChild(projectName);\n\n    //add title to nameWrapper div\n    projectNameWrapper.setAttribute('title', `${name}`);\n\n    //add project name and icon wrapper div to new project div\n    newProject.appendChild(projectNameWrapper);\n\n    //create wrapper for edit and trash icons\n    let iconWrapper = document.createElement('div');\n    iconWrapper.setAttribute('class', 'projectIconWrapper');\n    newProject.appendChild(iconWrapper);\n\n\n    //add edit icon to project div\n    let editIcon = document.createElement('img');\n    editIcon.src = _assets_edit_png__WEBPACK_IMPORTED_MODULE_2__;\n    editIcon.setAttribute('class', 'editIcon');\n    editIcon.addEventListener('click', e => addEditProjectElem(e));\n    iconWrapper.appendChild(editIcon);\n\n    //add trash icon to project div\n    let trashIcon = document.createElement('img');\n    trashIcon.src = _assets_trash_png__WEBPACK_IMPORTED_MODULE_1__;\n    trashIcon.setAttribute('class', 'trashIcon');\n    trashIcon.addEventListener('click', openRemProjModal);\n    iconWrapper.appendChild(trashIcon);\n\n    //add active project listener\n    addSetActiveProjectListener(newProject);\n\n    //append project div to active_project element\n    document.querySelector('.active_projects').appendChild(newProject);\n\n    //remove project form if one exists\n    if (document.getElementsByClassName('newProjectForm')[0]){\n        removeProjectForm();\n    };\n\n    overlay.classList.remove('active');\n};\n\nconst createProjectForm = function () {\n\n    //activate overlay\n    toggleOverlay();\n\n    //create div for form DOM element\n    let newProjectForm = document.createElement('div');\n    newProjectForm.setAttribute('class', 'newProjectForm');\n\n    //create div for form input and icon wrapper\n    let formWrapper = document.createElement('div');\n    formWrapper.setAttribute('class', 'formWrapper');\n\n    //add project logo to form\n    let formIcon = document.createElement('img');\n    formIcon.src = _assets_projectLogo_png__WEBPACK_IMPORTED_MODULE_0__;\n    formWrapper.appendChild(formIcon);\n\n    //add text input field to form\n    let formInput = document.createElement('input');\n    formInput.setAttribute('class', 'projectInput');\n    formInput.id = 'projectNameField';\n    formInput.setAttribute = ('type', 'text');\n    formInput.placeholder = 'project name';\n    formInput.maxLength = '40';\n    formWrapper.appendChild(formInput);\n\n    //add enter key listener to text input\n    formInput.addEventListener('keypress', function (e){\n        if (e.key === 'Enter') {\n            (0,_index__WEBPACK_IMPORTED_MODULE_5__.createProject)();\n        }\n    });\n\n    //add formWrapper to new project div\n    newProjectForm.appendChild(formWrapper);\n\n    //create wrapper for accept/cancel icons\n    let acceptCancelWrapper = document.createElement('div');\n    acceptCancelWrapper.setAttribute('class', 'acceptCancelWrapper');\n\n    //add accept icon to project div\n    let acceptIcon = document.createElement('img');\n    acceptIcon.src = _assets_check_png__WEBPACK_IMPORTED_MODULE_3__;\n    acceptIcon.setAttribute('class', 'acceptIcon');\n    acceptIcon.addEventListener('click', _index__WEBPACK_IMPORTED_MODULE_5__.createProject);\n    acceptCancelWrapper.appendChild(acceptIcon);\n\n    //add cancel icon to project div\n    let cancelIcon = document.createElement('img');\n    cancelIcon.src = _assets_cancel_png__WEBPACK_IMPORTED_MODULE_4__;\n    cancelIcon.setAttribute('class', 'cancelIcon');\n    cancelIcon.addEventListener('click', removeProjectForm);\n    acceptCancelWrapper.appendChild(cancelIcon);\n\n    //append accept & cancel wrapper to new project form\n    //append new project div to active_project element\n    newProjectForm.appendChild(acceptCancelWrapper);\n    document.querySelector('.active_projects').appendChild(newProjectForm);\n\n    //focus cursor on text input\n    document.getElementById('projectNameField').focus();\n};\n\nconst createEditProjectForm = function (element) {\n    //activate overlay\n    toggleOverlay();\n\n    //create div for form DOM element\n    let newProjectForm = document.createElement('div');\n    newProjectForm.setAttribute('class', 'newProjectForm');\n\n    //create div for form input and icon wrapper\n    let formWrapper = document.createElement('div');\n    formWrapper.setAttribute('class', 'formWrapper');\n\n    //add project logo to form\n    let formIcon = document.createElement('img');\n    formIcon.src = _assets_projectLogo_png__WEBPACK_IMPORTED_MODULE_0__;\n    formWrapper.appendChild(formIcon);\n\n    //add text input field to form\n    let formInput = document.createElement('input');\n    formInput.setAttribute('class', 'projectInput');\n    formInput.id = 'projectNameField';\n    formInput.setAttribute = ('type', 'text');\n    formInput.value = _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.editing].name; //set form value to the name of project that's currently being edited\n    formInput.maxLength = '40';\n    formWrapper.appendChild(formInput);\n\n    //add enter key listener to text input\n    formInput.addEventListener('keypress', function (e){\n        if (e.key === 'Enter') {\n            (0,_index__WEBPACK_IMPORTED_MODULE_5__.editProject)();\n        }\n    });\n\n    //add formWrapper to new project div\n    newProjectForm.appendChild(formWrapper);\n\n    //create wrapper for accept/cancel icons\n    let acceptCancelWrapper = document.createElement('div');\n    acceptCancelWrapper.setAttribute('class', 'acceptCancelWrapper');\n\n    //add accept icon to project div\n    let acceptIcon = document.createElement('img');\n    acceptIcon.src = _assets_check_png__WEBPACK_IMPORTED_MODULE_3__;\n    acceptIcon.setAttribute('class', 'acceptIcon');\n    acceptIcon.addEventListener('click', _index__WEBPACK_IMPORTED_MODULE_5__.editProject);\n    acceptCancelWrapper.appendChild(acceptIcon);\n\n    //add cancel icon to project div\n    let cancelIcon = document.createElement('img');\n    cancelIcon.src = _assets_cancel_png__WEBPACK_IMPORTED_MODULE_4__;\n    cancelIcon.setAttribute('class', 'cancelIcon');\n    cancelIcon.addEventListener('click', removeEditProjectForm);\n    acceptCancelWrapper.appendChild(cancelIcon);\n\n    //append accept & cancel wrapper to new project form\n    //append new project div to active_project element\n    newProjectForm.appendChild(acceptCancelWrapper);\n    // document.querySelector('.active_projects').appendChild(newProjectForm);\n    document.querySelector('.active_projects').insertBefore(newProjectForm, element);\n\n    //focus cursor on text input\n    document.getElementById('projectNameField').focus();\n};\n\nconst addProjectFormListener = function () {\n    const project_adder = document.getElementsByClassName('project_adder');\n    project_adder[0].addEventListener('click', createProjectForm);\n};\n\nconst removeProjectForm = function () {\n    const newProjectForm = document.getElementsByClassName('newProjectForm');\n    newProjectForm[0].parentNode.removeChild(newProjectForm[0]);\n    toggleOverlay();\n};\n\nconst removeEditProjectForm = function () {\n    const newProjectForm = document.getElementsByClassName('newProjectForm');\n    newProjectForm[0].parentNode.removeChild(newProjectForm[0]);\n    let parent = document.querySelector(`[data-project-id='${_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.editing}']`); //select project element that's currently being edited\n    parent.style.display = 'flex'; //show project div\n    toggleOverlay();\n};\n\nconst openRemProjModal = function (e) {\n    let modal = document.getElementById('removeProjectModal');\n    \n    //get targeted project id by accessing id of button's parent\n    //set the currently editing attribute of project library to the target project id\n    let parent = e.target.closest('.project');\n    _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.editing = parent.dataset.projectId;\n\n    //get project name by accessing div under parent and then the value of p element under that\n    let projName = parent.getElementsByClassName('nameWrapper')[0].querySelector('p').innerHTML;\n\n    //access text copy of modal and pass project name into copy with delete message\n    modal.querySelectorAll('.modal-copy')[0].innerHTML = `Delete the project \"${projName}\"?`;\n\n    modal.classList.add('active');\n    toggleOverlay();\n\n    e.stopImmediatePropagation();\n};\n\nconst closeModal = function (e) {\n\n    if (e.target.closest('.modal').id == \"createTodoModal\"){\n        clearTodoInputFields()\n    }\n\n    e.target.closest('.modal').classList.remove('active');\n    toggleOverlay();\n};\n\nconst toggleOverlay = function() {\n    let overlay = document.getElementById('overlay');\n    if (overlay.classList.contains('active')){\n        overlay.classList.remove('active');\n        return;\n    }\n    overlay.classList.add('active');\n};\n\nconst initModals = function() {\n\n    //bind click event handlers to modal close buttons\n    let closeButtons = document.getElementsByClassName('close-button');\n    for (let i = 0; i < closeButtons.length; i++){\n        closeButtons[i].addEventListener('click', closeModal);\n    };\n\n    //bind click event to delete button on remove project modal\n    let remProjDelButton = document.getElementById('remProjDelButton');\n    remProjDelButton.addEventListener('click', (e) => (0,_index__WEBPACK_IMPORTED_MODULE_5__.deleteProject)(e));\n\n    //bind click event to delete button on remove todo modal\n    let remTodoDelButton = document.getElementById('remTodoDelButton');\n    remTodoDelButton.addEventListener('click', _index__WEBPACK_IMPORTED_MODULE_5__.deleteTodo);\n\n};\n\nconst removeProjectElem = function () {\n\n    //set projectID to the ID of the project that's flagged as editing in\n    //projectLibrary object\n    let projectID = _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.editing\n\n    //delete DOM element with class project and ID equal to projectID\n    let element = document.querySelector(`[data-project-id='${projectID}']`);\n    element.remove();\n};\n\nconst addEditProjectElem = function (e) {\n    let parent = e.target.parentNode.parentNode; //target the containing project div\n    _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.editing = parent.dataset.projectId //set project as currently editing\n    parent.style.display = 'none'; //hide project div\n    createEditProjectForm(parent);\n    e.stopImmediatePropagation();\n};\n\nconst editProjectElem = function () {\n    let parent = document.querySelector(`[data-project-id='${_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.editing}']`); //select project element that's currently being edited\n    parent.querySelector('p').innerHTML = `${_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.editing].name}`; //change display name of project to whatever's listed in object storage\n    parent.querySelector('.nameWrapper').setAttribute('title', `${_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.editing].name}`)\n    parent.style.display = 'flex'; //show project div\n    removeProjectForm(); //remove edit project div\n};\n\nconst addSetActiveProjectListener = function (projectElement) {\n    projectElement.addEventListener('click', _index__WEBPACK_IMPORTED_MODULE_5__.setActiveProject)\n};\n\nconst removeActiveProjectElementToggle = function () {\n    if (_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.active === -1){\n        return\n    }\n    let element = document.querySelector(`[data-project-id='${_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.active}']`)\n    element.classList.remove('activeProject');\n}\n\nconst addActiveProjectElementToggle = function () {\n    let element = document.querySelector(`[data-project-id='${_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.active}']`)\n    element.classList.add('activeProject');\n}\n\nconst addTodoAdderListener = function () {\n    const todoAdder = document.querySelector('.todo_adder');\n    todoAdder.addEventListener('click', openAddTodoModal);\n};\n\nconst openAddTodoModal = function () {\n    let todoModal = document.querySelector('#createTodoModal');\n    todoModal.classList.add('active');\n    document.getElementById('todo-name').focus();\n    toggleOverlay();\n}\n\nconst addPriorityButtonsEventListeners = function () {\n    let priorityButtons = document.querySelectorAll('.priority-button');\n    priorityButtons.forEach((element) => element.addEventListener('click', (e) => setPriorityButton(e)))\n}\n\nconst setPriorityButton = function (e) {\n    let untoggleAndExit = false;\n    if (e.target.classList.contains('active')) untoggleAndExit = true\n    let priorityButtons = document.querySelectorAll('.priority-button');\n    priorityButtons.forEach((button) => button.classList.remove('active'))\n    if (untoggleAndExit) return\n    e.target.classList.add('active');\n}\n\nconst addTodoSubmitListener = function () {\n    let todoSubmitButton = document.querySelector('#createTodoButton')\n    todoSubmitButton.addEventListener('click', _index__WEBPACK_IMPORTED_MODULE_5__.createTodo)\n\n    let nameInput = document.querySelector('#todo-name');\n    nameInput.addEventListener('keypress', createTodoKeypressFunc);\n}\n\nconst removeTodoSubmitListener = function () {\n    let todoSubmitButton = document.querySelector('#createTodoButton')\n    todoSubmitButton.removeEventListener('click', _index__WEBPACK_IMPORTED_MODULE_5__.createTodo)\n\n    let nameInput = document.querySelector('#todo-name');\n    nameInput.removeEventListener('keypress', createTodoKeypressFunc);\n}\n\nconst createTodoKeypressFunc = function (e){\n    if (e.key === 'Enter') {\n        (0,_index__WEBPACK_IMPORTED_MODULE_5__.createTodo)(e);\n    }\n}\n\nconst getTodoValues = function () {\n    let name = document.querySelector('#todo-name').value\n    let description = document.querySelector('#todo-description').value\n    let dueDate = document.querySelector('#todo-due').value\n\n    let priorityButtons = document.querySelectorAll('.priority-button')\n    let priority\n    priorityButtons.forEach((button) => {\n        if (button.classList.contains('active')){\n            priority = button.dataset.priorityLevel\n        }\n    })\n\n    return {name, description, dueDate, priority}\n}\n\nconst createTodoElement = function (id, name, priority, completed) {\n    let baseTodoElement = document.querySelector('#base-todo-item');\n    let newTodoElement = baseTodoElement.cloneNode(true);\n    newTodoElement.classList.add('activeTodo');\n    if (completed) newTodoElement.classList.add('complete');\n    toggleCheckbox(newTodoElement)\n    newTodoElement.removeAttribute('id');\n    newTodoElement.dataset.todoId = `${id}`;\n\n    //add eventlistener to trash icon\n    let trashIcon = newTodoElement.querySelector('.todo-trash-icon')\n    trashIcon.addEventListener('click', openRemTodoModal)\n\n    //add eventlistener to edit icon\n    let editIcon = newTodoElement.querySelector('.todo-edit-icon')\n    editIcon.addEventListener('click', openEditTodoModal)\n\n    //add click eventlistener to leftwrapper for marking todo complete\n    let leftWrapper = newTodoElement.querySelector('.todo-left-wrapper')\n    leftWrapper.addEventListener('click', (e) => (0,_index__WEBPACK_IMPORTED_MODULE_5__.markTodoComplete)(e))\n\n    //ass click eventlistener to todo item div for opening view todo modal\n    newTodoElement.addEventListener('click', openViewTodoModal)\n\n    let newTodoTitleElement = newTodoElement.querySelector('.todo-left-wrapper').querySelector('p')\n    newTodoTitleElement.innerText = `${name}`;\n\n    if (priority === 'low'){\n        newTodoElement.classList.add('lowPriority')\n    }\n    if (priority === 'medium'){\n        newTodoElement.classList.add('mediumPriority')\n    }\n    if (priority === 'high'){\n        newTodoElement.classList.add('highPriority')\n    }\n\n    let contentWrapper = document.querySelector('.content_wrapper');\n    let todoAdder = document.querySelector('.todo_adder');\n\n    contentWrapper.insertBefore(newTodoElement, todoAdder);\n\n\n}\n\nconst openRemTodoModal = function (e) {\n    let modal = document.getElementById('removeTodoModal');\n    let element = e.target.closest('.todo-item')\n    _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.todoEditing = element.dataset.todoId \n    let todoName = element.querySelector('p').innerHTML\n    modal.querySelector('.modal-copy').innerHTML = `Delete the item \"${todoName}\"?`;\n    modal.classList.add('active');\n    toggleOverlay();\n    e.stopImmediatePropagation();\n};\n\nconst removeTodoElement = function () {\n    let id = _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.todoEditing\n    let element = document.querySelector(`[data-todo-id=\"${id}\"]`)\n    element.remove();\n}\n\nconst clearTodoInputFields = function () {\n    document.querySelector('#todo-name').value = ''\n    document.querySelector('#todo-description').value = ''\n    document.querySelector('#todo-description').value = ''\n    document.querySelector('#todo-due').value = ''\n\n    let priorityButtons = document.querySelectorAll('.priority-button');\n    priorityButtons.forEach((button) => button.classList.remove('active'))\n}\n\nconst removeTodoElements = function () {\n    let activeTodoElements = document.querySelectorAll('.activeTodo')\n    activeTodoElements.forEach((element) => element.remove())\n}\n\nconst updateItemsTitle = function () {\n    let header = document.querySelector('.todos-header');\n    header.innerText = `Items in ${_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.active].name}`\n}\n\nconst markTodoElementComplete = function (e) {\n    let element = e.target.closest('.todo-item')\n    let id = element.dataset.todoId\n    element.classList.toggle('complete')\n    toggleCheckbox(element)\n    return id\n}\n\nconst toggleCheckbox = function (element) {\n    let checkbox = element.querySelector('.checkbox')\n    checkbox.checked = element.classList.contains('complete')\n}\n\nconst openEditTodoModal = function (e) {\n    let id = e.target.closest('.todo-item').getAttribute('data-todo-id')\n    _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.todoEditing = id\n\n    updateTodoModalContextText()\n    updateEditTodoModalValues()\n    removeDefaultTodoModalCloseListeners()\n    addEditTodoModalCloseListeners()\n    openAddTodoModal()\n    removeTodoSubmitListener()\n    addTodoSubmitEditListener()\n    e.stopImmediatePropagation();\n}\n\nconst updateTodoModalContextText = function () {\n    let modal = document.querySelector('#createTodoModal')\n    let submitButton = modal.querySelector('#createTodoButton')\n\n    if (submitButton.innerText === 'Create'){\n        submitButton.innerText = 'Update'\n        modal.querySelector('.modal-title').innerText = 'Edit to-do item'\n    }\n    else {\n        submitButton.innerText = 'Create'\n        modal.querySelector('.modal-title').innerText = 'Create to-do item'\n    }\n}\n\nconst updateEditTodoModalValues = function () {\n    let id = _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.todoEditing\n    let todo = _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.active].todoLibrary\n\n    let name = document.querySelector('#todo-name')\n    let description = document.querySelector('#todo-description')\n    let dueDate = document.querySelector('#todo-due')\n\n    name.value = todo[id].name\n    description.value = todo[id].description\n    dueDate.value = todo[id].dueDate\n\n    if (todo[id].priority === 'low'){\n        document.querySelector('#low-priority').classList.add('active')\n        return\n    }\n    if (todo[id].priority === 'medium'){\n        document.querySelector('#med-priority').classList.add('active')\n        return\n    }\n    if (todo[id].priority === 'high'){\n        document.querySelector('#high-priority').classList.add('active')\n        return\n    }\n}\n\nconst addTodoSubmitEditListener = function () {\n    let submitButton = document.querySelector('#createTodoButton')\n    submitButton.addEventListener('click', _index__WEBPACK_IMPORTED_MODULE_5__.submitTodoEdits)\n\n    let nameInput = document.querySelector('#todo-name');\n    nameInput.addEventListener('keypress', editTodoKeypressFunc);\n}\n\nconst removeTodoSubmitEditListener = function () {\n    let submitButton = document.querySelector('#createTodoButton')\n    submitButton.removeEventListener('click', _index__WEBPACK_IMPORTED_MODULE_5__.submitTodoEdits)\n\n    let nameInput = document.querySelector('#todo-name');\n    nameInput.removeEventListener('keypress', editTodoKeypressFunc);\n}\n\nconst editTodoKeypressFunc = function (e) {\n    if (e.key === 'Enter') {\n        (0,_index__WEBPACK_IMPORTED_MODULE_5__.submitTodoEdits)(e);\n    }\n}\n\nconst updateTodoElement = function () {\n    let element = document.querySelector(`[data-todo-id=\"${_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.todoEditing}\"]`)\n    let todo = _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.active].todoLibrary[_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.todoEditing]\n\n    let elementName = element.querySelector('p')\n    elementName.innerText = `${todo.name}`\n\n    element.classList.remove('lowPriority')\n    element.classList.remove('mediumPriority')\n    element.classList.remove('highPriority')\n\n    if (todo.priority === 'low'){\n        element.classList.add('lowPriority')\n    }\n    if (todo.priority === 'medium'){\n        element.classList.add('mediumPriority')\n    }\n    if (todo.priority === 'high'){\n        element.classList.add('highPriority')\n    }\n}\n\nconst addDefaultTodoModalCloseListeners = function () {\n    let editTodoModal = document.querySelector('#createTodoModal')\n    let closeButtons = editTodoModal.getElementsByClassName('close-button');\n    for (let i = 0; i < closeButtons.length; i++){\n        closeButtons[i].addEventListener('click', closeModal);\n    };\n}\n\nconst removeDefaultTodoModalCloseListeners = function () {\n    let editTodoModal = document.querySelector('#createTodoModal')\n    let closeButtons = editTodoModal.getElementsByClassName('close-button');\n    for (let i = 0; i < closeButtons.length; i++){\n        closeButtons[i].removeEventListener('click', closeModal);\n    };\n}\n\nconst addEditTodoModalCloseListeners = function () {\n    //bind click event handlers to modal close buttons\n    let editTodoModal = document.querySelector('#createTodoModal')\n    let closeButtons = editTodoModal.getElementsByClassName('close-button');\n    for (let i = 0; i < closeButtons.length; i++){\n        closeButtons[i].addEventListener('click', closeEditTodoModal);\n    };\n}\n\nconst removeEditTodoModalCloseListeners = function () {\n    //bind click event handlers to modal close buttons\n    let editTodoModal = document.querySelector('#createTodoModal')\n    let closeButtons = editTodoModal.getElementsByClassName('close-button');\n    for (let i = 0; i < closeButtons.length; i++){\n        closeButtons[i].removeEventListener('click', closeEditTodoModal);\n    };\n}\n\nconst closeEditTodoModal = function (e) {\n    closeModal(e)\n    removeTodoSubmitEditListener()\n    addTodoSubmitListener()\n    setTimeout(updateTodoModalContextText, 200)\n    setTimeout(clearTodoInputFields, 200)\n    removeEditTodoModalCloseListeners()\n    addDefaultTodoModalCloseListeners()\n}\n\nconst toggleTodoPanelElementsVis = function () {\n    let title = document.querySelector('.todos-header')\n    let adder = document.querySelector('.todo_adder')\n    let noProjElem = document.querySelector('#no-project-wrapper')\n    if (_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.active === -1){\n        title.style.display = 'none'\n        adder.style.display = 'none'\n        noProjElem.style.display = 'flex'\n        return\n    }\n    title.style.display = 'block'\n    adder.style.display = 'flex'\n    noProjElem.style.display = 'none'\n}\n\nconst openViewTodoModal = function (e) {\n    let id = e.target.closest('.todo-item').getAttribute('data-todo-id')\n\n    updateViewTodoModalValues(id)\n\n    document.querySelector('#viewTodoModal').classList.add('active')\n    toggleOverlay();\n}\n\nconst updateViewTodoModalValues = function (id) {\n    let name = document.querySelector('#view-name')\n    let description = document.querySelector('#view-description')\n    let due = document.querySelector('#view-due')\n    let priority = document.querySelector('#view-priority')\n\n    let todo = _objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_6__.projectLibrary.active].todoLibrary[id]\n\n    name.innerText = `${todo.name}`\n    description.innerText = `${todo.description}`\n    due.innerText = `${todo.dueDate}`\n    priority.innerText = todo.priority ? `${todo.priority}` : ''\n}\n\n\n\n\n\n\n//# sourceURL=webpack://todo-app/./src/domManipulations.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createProject\": () => (/* binding */ createProject),\n/* harmony export */   \"createTodo\": () => (/* binding */ createTodo),\n/* harmony export */   \"deleteProject\": () => (/* binding */ deleteProject),\n/* harmony export */   \"deleteTodo\": () => (/* binding */ deleteTodo),\n/* harmony export */   \"editProject\": () => (/* binding */ editProject),\n/* harmony export */   \"markTodoComplete\": () => (/* binding */ markTodoComplete),\n/* harmony export */   \"setActiveProject\": () => (/* binding */ setActiveProject),\n/* harmony export */   \"setProjectBeingEdited\": () => (/* binding */ setProjectBeingEdited),\n/* harmony export */   \"submitTodoEdits\": () => (/* binding */ submitTodoEdits)\n/* harmony export */ });\n/* harmony import */ var _main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.css */ \"./src/main.css\");\n/* harmony import */ var _domManipulations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domManipulations */ \"./src/domManipulations.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./objects */ \"./src/objects.js\");\n\n\n\n\nconst createProject = function (arg) {\n\n    //set name to either a passed arg (if given) \n    //or else the value of a form input\n    let name = typeof(arg) === 'string'\n    ? arg\n    : document.getElementById('projectNameField').value;\n\n    if (name.trim().length === 0){\n        alert('Please enter a valid project name')\n        document.getElementById('projectNameField').focus()\n        return;\n    }\n\n    let id = (0,_objects__WEBPACK_IMPORTED_MODULE_2__.createProjectObject)(name);\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.createProjectElement)(name, id);\n};\n\nconst deleteProject = function (e) {\n    //remove target project element from DOM\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.removeProjectElem)();\n\n    //remove project object from projectLibrary\n    delete _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.editing];\n\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.closeModal)(e);\n\n    //behavior for when user deletes the active project\n    handleActiveProjDelete()\n\n    //reset projectLibrary.editing\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.editing = -1;\n};\n\nconst handleActiveProjDelete = function () {\n    //check for active project delete\n    if (_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.editing !== _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.active) {\n        return\n    }\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.active = -1\n    ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.toggleTodoPanelElementsVis)()\n    ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.removeTodoElements)()\n}\n\nconst editProject = function () {\n\n    let name = document.getElementById('projectNameField').value\n\n    if (name.trim().length === 0){\n        alert('Please enter a valid project name')\n        document.getElementById('projectNameField').focus()\n        return;\n    }\n\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.editing].name = name; //update name of project in library to the entered value in edit form\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.editProjectElem)();\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.updateItemsTitle)();\n};\n\nconst setActiveProject = function (e) {\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.removeActiveProjectElementToggle)();\n    let target = getEventContainingDiv(e);\n    updateActiveInProjectLibrary(e, target);\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.addActiveProjectElementToggle)();\n\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.updateItemsTitle)();\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.toggleTodoPanelElementsVis)();\n\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.removeTodoElements)();\n    populateTodoElements();\n}\n\nconst getEventContainingDiv = function (e) {\n    //if event is passed in, returns project div that captured click\n    if (e === 0) {\n        return 0;\n    }\n    let target = e.target;\n    while (target.dataset.projectId === undefined) {\n        target = target.parentNode\n    }\n    return target;\n}\n\nconst updateActiveInProjectLibrary = function (e, target) {\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.active = e === 0 ? '0' : target.dataset.projectId;\n}\n\nconst setProjectBeingEdited = function (id) {\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.editing = id;\n};\n\nconst createTodo = function (e) {\n\n    let nameField = document.querySelector('#todo-name')\n    if (nameField.value.trim().length === 0){\n        alert('Please enter a valid item name')\n        nameField.focus()\n        return;\n    }\n\n    let todoValues = (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.getTodoValues)()\n    let todo = (0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.active], todoValues.name, todoValues.description, todoValues.dueDate, todoValues.priority)\n    ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.createTodoElement)(todo.id, todo.name, todo.priority);\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.closeModal)(e)\n    ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.clearTodoInputFields)();\n};\n\nconst deleteTodo = function (e) {\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.removeTodoElement)()\n    let id = _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.todoEditing\n    delete _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.active].todoLibrary[id]\n    ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.closeModal)(e);\n}\n\nconst markTodoComplete = function (e) {\n    let id = (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.markTodoElementComplete)(e)\n    let todo = _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.active].todoLibrary[id]\n    todo.completed = !todo.completed\n    e.stopImmediatePropagation();\n}\n\nconst populateTodoElements = function () {\n    let todoLibrary = _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.active].todoLibrary\n    for (const key in todoLibrary){\n        let id = todoLibrary[key].id\n        let name = todoLibrary[key].name\n        let priority = todoLibrary[key].priority\n        let completed = todoLibrary[key].completed\n\n        ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.createTodoElement)(id, name, priority, completed)\n    }\n}\n\nconst submitTodoEdits = function (e) {\n\n    let nameField = document.querySelector('#todo-name')\n    if (nameField.value.trim().length === 0){\n        alert('Please enter a valid item name')\n        nameField.focus()\n        return;\n    }\n\n    let todoValues = (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.getTodoValues)()\n    updateTodoValues(todoValues)\n    ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.updateTodoElement)()\n    ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.closeEditTodoModal)(e)\n}\n\nconst updateTodoValues = function (todoValues) {\n    let id = _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.todoEditing\n    let todo = _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.active].todoLibrary\n    todo[id].name = todoValues.name\n    todo[id].description = todoValues.description\n    todo[id].dueDate = todoValues.dueDate\n    todo[id].priority = todoValues.priority\n}\n\nconst initSampleValues = function () {\n    //initialize sample values for projects and todo items\n    createProject(\"Finish App\");\n    (0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[0], 'Complete styling', 'Update css to reflect new styling decisions', '2023-11-02', 'high')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[0], 'Add language support', 'Implement ability to select language', '2024-02-16', 'medium')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[0], 'Fix bugs', 'Squash all the bugs!', '2024-03-10', 'low')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[0], 'Push to GitHub', \"Don't forget to commit changes!\", '', 'high')\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[0].todoLibrary[0].completed = true\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[0].todoLibrary[2].completed = true\n\n    createProject(\"Groceries\");\n    (0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[1], 'Eggs', '', '', '')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[1], 'Milk', '', '', '')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[1], 'Bread', '', '', '')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[1], 'Coffee', '', '', '')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[1], 'Carrots', '', '', '')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[1], 'Oatmeal', '', '', '')\n\n    createProject(\"Gym\");\n    (0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[2], 'Leg day', 'Workout quads and calves', '', 'low')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[2], 'Arm day', 'Work on those pythons', '', 'high')\n    ;(0,_objects__WEBPACK_IMPORTED_MODULE_2__.createTodoObject)(_objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[2], 'Cardio', 'Break a sweat', '', 'high')\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[2].todoLibrary[11].completed = true\n    _objects__WEBPACK_IMPORTED_MODULE_2__.projectLibrary.library[2].todoLibrary[12].completed = true\n}\n\nconst initApp = function () {\n    ;(0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.addProjectFormListener)();\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.addTodoAdderListener)();\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.addPriorityButtonsEventListeners)();\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.addTodoSubmitListener)();\n    initSampleValues();\n    setActiveProject(0);\n    (0,_domManipulations__WEBPACK_IMPORTED_MODULE_1__.initModals)();\n}\n\ninitApp()\n\n//# sourceURL=webpack://todo-app/./src/index.js?");

/***/ }),

/***/ "./src/objects.js":
/*!************************!*\
  !*** ./src/objects.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createProjectObject\": () => (/* binding */ createProjectObject),\n/* harmony export */   \"createTodoObject\": () => (/* binding */ createTodoObject),\n/* harmony export */   \"projectLibrary\": () => (/* binding */ projectLibrary)\n/* harmony export */ });\nconst Project = function (projectName) {\n\n    let name = projectName;\n    let id = projectLibrary.assignId();\n    let todoLibrary = {};\n\n    return {name, id, todoLibrary};\n\n};\n\nconst Todo = function (todoName, todoDescription, todoDueDate, todoPriority) {\n\n    let name = todoName;\n    let description = todoDescription;\n    let dueDate = todoDueDate;\n    let priority = todoPriority;\n    let id = projectLibrary.assignTodoId();\n    let completed = false;\n\n    return {\n        name, description, dueDate, priority, id, completed\n    }\n\n\n};\n\nlet projectLibrary = {\n    idCounter: -1,\n    todoIdCounter: -1,\n    library: {},\n    editing: -1,\n    active: -1,\n    todoEditing: -1,\n    assignId: function () {\n        this.idCounter++;\n        return this.idCounter;\n    },\n    assignTodoId: function () {\n        this.todoIdCounter++;\n        return this.todoIdCounter;\n    }\n};\n\nconst createProjectObject = function (projectName) {\n    let project = Project(projectName);\n    projectLibrary.library[project.id] = project;\n    return project.id\n};\n\nconst createTodoObject = function (project, name, description, dueDate, priority) {\n    let todo = Todo(name, description, dueDate, priority);\n    project.todoLibrary[todo.id] = todo;\n    return todo;\n};\n\n\n\n//# sourceURL=webpack://todo-app/./src/objects.js?");

/***/ }),

/***/ "./src/assets/cancel.png":
/*!*******************************!*\
  !*** ./src/assets/cancel.png ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"imgs/cancel.png\";\n\n//# sourceURL=webpack://todo-app/./src/assets/cancel.png?");

/***/ }),

/***/ "./src/assets/check.png":
/*!******************************!*\
  !*** ./src/assets/check.png ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"imgs/check.png\";\n\n//# sourceURL=webpack://todo-app/./src/assets/check.png?");

/***/ }),

/***/ "./src/assets/edit.png":
/*!*****************************!*\
  !*** ./src/assets/edit.png ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"imgs/edit.png\";\n\n//# sourceURL=webpack://todo-app/./src/assets/edit.png?");

/***/ }),

/***/ "./src/assets/projectLogo.png":
/*!************************************!*\
  !*** ./src/assets/projectLogo.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"imgs/projectLogo.png\";\n\n//# sourceURL=webpack://todo-app/./src/assets/projectLogo.png?");

/***/ }),

/***/ "./src/assets/trash.png":
/*!******************************!*\
  !*** ./src/assets/trash.png ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"imgs/trash.png\";\n\n//# sourceURL=webpack://todo-app/./src/assets/trash.png?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;